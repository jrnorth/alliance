<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
 -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
           http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
           http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
           http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <bean id="metacardType" class="org.codice.alliance.transformer.nitf.NitfMetacardType"/>

    <bean id="transformer" class="org.codice.alliance.transformer.nitf.NitfInputTransformer">
        <property name="nitfMetacardType" ref="metacardType"/>
    </bean>

    <bean id="plugin" class="org.codice.alliance.transformer.nitf.NitfPreStoragePlugin">
        <cm:managed-properties persistent-id="NITF_Input_Transformer"
                               update-strategy="container-managed"/>
        <property name="maxSideLength" value="1024"/>
    </bean>

    <service ref="transformer" interface="ddf.catalog.transform.InputTransformer">
        <service-properties>
            <entry key="id" value="nitf"/>
            <!-- shortname only exists for backwards compatibility -->
            <entry key="shortname" value="nitf"/>
            <entry key="title" value="NITF Input Transformer"/>
            <entry key="description"
                   value="Extracts metadata from detected NITF files"/>
            <entry key="mime-type">
                <list>
                    <value>image/nitf</value>
                </list>
            </entry>
        </service-properties>
    </service>

    <service ref="metacardType" interface="ddf.catalog.data.MetacardType">
        <service-properties>
            <entry key="name" value="nitf"/>
        </service-properties>
    </service>

    <service ref="plugin" auto-export="interfaces">
        <service-properties>
            <entry key="name" value="nitf-prestorage-plugin"/>
        </service-properties>
    </service>

    <service interface="ddf.catalog.transform.MetacardTransformer">
        <service-properties>
            <entry key="id" value="overlay.overview"/>
            <!-- shortname only exists for backwards compatibility -->
            <entry key="shortname" value="overlay.overview"/>
            <entry key="mime-type" value="image/png"/>
            <entry key="generateActionProvider" value="false"/>
        </service-properties>
        <bean class="ddf.catalog.transformer.OverlayMetacardTransformer">
            <argument>
                <bean class="org.codice.alliance.transformer.nitf.OverviewSupplier">
                    <argument>
                        <reference interface="ddf.catalog.transform.MetacardTransformer"
                                   filter="(id=resource)"/>
                    </argument>
                </bean>
            </argument>
        </bean>
    </service>

    <service interface="ddf.action.ActionProvider">
        <service-properties>
            <entry key="id" value="catalog.data.metacard.map.overlay.overview"/>
        </service-properties>
        <bean class="ddf.catalog.transformer.OverlayActionProvider">
            <argument>
                <bean class="org.codice.alliance.transformer.nitf.OverviewPredicate"/>
            </argument>
            <argument value="overlay.overview"/>
        </bean>
    </service>

</blueprint>
